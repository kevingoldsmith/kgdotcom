[
	{
		"talk": "When/Why/How to Stop Coding as your Day Job",
		"description": "<p>Many, if not most of us, started as developers. We learned and perfected our craft and were proud of our coding accomplishments. It was what defined us.</p><p>Moving into the Lead role means taking on new responsibilities. Some are technical. Many are not.</p><p>As you progress in leadership, more and more of your responsibilities have less and less to do with coding. Many of us, including me, struggle with giving up coding when it is no longer our primary responsibility. Adapting to this new reality is one of the biggest challenges that I have seen leads face as they move into managing larger teams.</p><p>When is it time to make coding your hobby instead of your job? How do you do it? Where do you find that quick hit of dopamine that is gone when you can't mark a bug as fixed or get rid of that compilation error?</p><p>This talk is all about embracing the joys and challenges of people leadership while staying credible as a technical professional, and what it means to be a leader in a technical organization. The talk discusses how you can remain a technical resource for your team, even when you aren't deep in the code.</p><p>This talk will give you a potential path to follow in your development. It will make you more confident about your new technical leadership career, even if you are still a coding lead.</p>"
	},
	{
		"talk": "Do I know you? Identity on the Internet and the Question of Trust",
		"description": "The internet has an identity crisis. How do you know that the person interacting with your product is who they claim to be? How can you be sure that they are a person at all? This is a talk about the evolution of identity on the internet, from a product development perspective. An overview of the things you should be aware of around digital identity when building software today, and the things you should pay attention to for the future."
	},
	{
		"talk": "Developing Your Developers: Constructing Career Paths For Your Technologists",
		"description": "How you construct development paths in your company can support and deepen your company values. Doing it well means heightening employee engagement and improving retention. This talk gives technology and people team leaders a place to start their conversations."
	},
	{
		"talk":"Using Agile Techniques to Build a More Inclusive Team",
		"description": "Building psychological safety in your teams is critical if you want them to perform at their best. The challenge is how to develop and encourage the trust and collaboration and to make sure that all voices are heard. \nThe agile community has developed facilitation exercises and tools that make conversations more democratic and inclusive. I have used some of these techniques with my teams for years and have found them incredibly valuable. I will teach you some of the agile methods that I use for large and small team meetings, brainstorms, and one-on-ones that encourage all team members to participate. These tools also help make sure that all voices are respected and valued."
	},
	{
		"talk": "Architecture and Organization",
		"description": "Over 50 years ago Melvin Conway wrote an article identifying a correspondence between the structure of our organizations and the structure of the software we produce. We still talk about Conway's Law today because of the fundamental truth of that observation. This talk goes beyond that article to examine why this happens, and how you can take advantage of it to make better software."
	},
	{
		"talk": "Fail Fast, Fail Smart... Succeed!",
		"description": "Software development has been evolving. When I started in the industry, working at companies like Microsoft, we would bet many person-years of development and many millions of dollars into the development of products that would sometimes be hits and sometimes be total duds. We were building blind. This blindness was partly due to our waterfall processes, but also to how software distribution and marketing worked then. A flop for a smaller company could mean the end of the line. The cost of failure was incredibly high. Over the years, we learned how to take some of that risk out by switching to agile software development and now Lean. Working this way we can learn quicker, and take smaller risks. However, there are other things we can do in how we architect our software or roll it out that can also reduce the technical and product risk and help us fail smarter and learn faster. In this keynote, I speak about my experiences building waterfall products at Microsoft, building agile and lean at Onfido, Adobe, Spotify, and Avvo; and I give real architectural, cultural, and organizational tools you can use to make your projects and company more failure safe."
	},
	{
		"talk": "When, Why and How to Stop Coding as Your Day Job",
		"description": "As you progress in leadership, more and more of your responsibilities have less and less to do with coding. When is it time to make coding your hobby instead of your job? How do you do it?"
	},
	{
		"talk": "Presenting to executives",
		"description": "<p>Presenting to executives at your company is different than giving a presentation to your team, other teams, at a meetup, a conference, or customers.</p><p>This talk presents some concrete strategies for planning your presentation, preparing the attendees, handling unexpected questions, going down rabbit holes, driving the attendees to a decision (if that is your goal), and following up afterward.</p>"
	}
]